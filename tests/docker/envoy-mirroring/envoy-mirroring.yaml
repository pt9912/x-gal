# Envoy Configuration for Request Mirroring Tests
# Generated by GAL - Tests Feature 6 (Request Mirroring)

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains: ['*']
              routes:
              # Route 1: /api/v1 - 100% mirroring to shadow backend
              - match:
                  prefix: '/api/v1'
                route:
                  cluster: primary_cluster
                  request_mirror_policies:
                  - cluster: shadow_cluster
                    runtime_fraction:
                      default_value:
                        numerator: 100
                        denominator: HUNDRED
              # Route 2: /api/v2 - 50% mirroring (sampling)
              - match:
                  prefix: '/api/v2'
                route:
                  cluster: primary_cluster
                  request_mirror_policies:
                  - cluster: shadow_cluster
                    runtime_fraction:
                      default_value:
                        numerator: 50
                        denominator: HUNDRED
              # Route 3: /api/v3 - No mirroring (baseline)
              - match:
                  prefix: '/api/v3'
                route:
                  cluster: primary_cluster
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  # Primary Backend Cluster (production traffic)
  - name: primary_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    connect_timeout: 5s
    load_assignment:
      cluster_name: primary_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend-primary
                port_value: 8080
    health_checks:
    - timeout: 1s
      interval: 5s
      unhealthy_threshold: 2
      healthy_threshold: 2
      http_health_check:
        path: "/"

  # Shadow Backend Cluster (mirrored traffic)
  - name: shadow_cluster
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    connect_timeout: 5s
    load_assignment:
      cluster_name: shadow_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: backend-shadow
                port_value: 8080
    health_checks:
    - timeout: 1s
      interval: 5s
      unhealthy_threshold: 2
      healthy_threshold: 2
      http_health_check:
        path: "/"

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
