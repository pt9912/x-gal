# Custom Kong/Nginx Template for Request Mirroring
# This template adds Nginx mirror module support to Kong
#
# Kong uses Nginx under the hood, so we can leverage ngx_http_mirror_module
# for request mirroring/shadowing.
#
# This is injected into Kong's server block via KONG_NGINX_PROXY_INCLUDE
#
# Note: Kong already handles the routes, so we override specific locations

# Mirror configuration for /api/v1 (100% mirroring)
location /api/v1 {
    mirror /mirror-v1;
    mirror_request_body on;
    proxy_pass http://backend-primary:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

location = /mirror-v1 {
    internal;
    proxy_pass http://backend-shadow:8080/api/v1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Mirror "true";
    proxy_set_header X-Shadow-Version "v1";
}

# Mirror configuration for /api/v2 (50% sampling)
# Note: We use all requests to shadow for simplicity in E2E tests
# Real 50% sampling would require split_clients in http block
location /api/v2 {
    mirror /mirror-v2;
    mirror_request_body on;
    proxy_pass http://backend-primary:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

location = /mirror-v2 {
    internal;
    proxy_pass http://backend-shadow:8080/api/v2;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

# No mirroring for /api/v3 (baseline)
location /api/v3 {
    proxy_pass http://backend-primary:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

# Mirror configuration for /api/v4 (POST with mirroring)
location /api/v4 {
    mirror /mirror-v4;
    mirror_request_body on;
    proxy_pass http://backend-primary:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
}

location = /mirror-v4 {
    internal;
    proxy_pass http://backend-shadow:8080/api/v4;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Mirror-Type "post-request";
}
