version: '3.8'

services:
  # Backend - Primary (production traffic)
  backend-primary:
    build:
      context: ../backends
      dockerfile: Dockerfile
    command: ["python", "-u", "/app/primary.py"]
    environment:
      - PORT=8080
    networks:
      - test-network-kong-mirroring
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080')"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Backend - Shadow (mirrored traffic)
  backend-shadow:
    build:
      context: ../backends
      dockerfile: Dockerfile
    command: ["python", "-u", "/app/shadow.py"]
    environment:
      - PORT=8080
    networks:
      - test-network-kong-mirroring
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080')"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Kong Gateway with Request Mirroring (using Nginx Mirror Module)
  kong:
    image: kong:3.4
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yaml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
      # Use Nginx mirror module via custom template (inject into server block)
      KONG_NGINX_PROXY_INCLUDE: /usr/local/kong/custom/nginx-template.conf
    volumes:
      - ./kong-mirroring-nginx.yaml:/usr/local/kong/declarative/kong.yaml:ro
      - ./nginx-template.conf:/usr/local/kong/custom/nginx-template.conf:ro
    ports:
      - "10003:8000"  # Proxy port (different from traffic-split tests)
      - "8003:8001"   # Admin API port (different from traffic-split tests)
    networks:
      - test-network-kong-mirroring
    depends_on:
      backend-primary:
        condition: service_healthy
      backend-shadow:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  test-network-kong-mirroring:
    driver: bridge
