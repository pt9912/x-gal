# Nginx Configuration for Request Mirroring Tests
# Generated by GAL - Tests Feature 6 (Request Mirroring)

events {
    worker_connections 1024;
}

http {
    # Logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log info;

    # Upstream definitions
    upstream primary_backend {
        server backend-primary:8080;
    }

    upstream shadow_backend {
        server backend-shadow:8080;
    }

    # Main server listening on port 10000
    server {
        listen 10000;
        server_name _;

        # Route 1: /api/v1 - 100% mirroring to shadow backend
        location /api/v1 {
            # Mirror request to shadow backend (100%)
            mirror /mirror_shadow;
            mirror_request_body on;

            # Proxy to primary backend
            proxy_pass http://primary_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Route 2: /api/v2 - 50% mirroring (sampling)
        # Note: Nginx doesn't natively support percentage-based mirroring
        # We use split_clients for sampling
        location /api/v2 {
            # 50% sampling using split_clients
            if ($mirror_v2_sample = "1") {
                set $do_mirror 1;
            }

            # Mirror request to shadow backend (50%)
            mirror /mirror_shadow;
            mirror_request_body on;

            # Proxy to primary backend
            proxy_pass http://primary_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Route 3: /api/v3 - No mirroring (baseline)
        location /api/v3 {
            # No mirroring configured

            # Proxy to primary backend
            proxy_pass http://primary_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Internal location for mirroring to shadow backend
        location = /mirror_shadow {
            internal;
            proxy_pass http://shadow_backend$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Mirror "true";
            proxy_set_header X-Shadow-Version "v1";

            # Don't wait for shadow response
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Split clients for 50% sampling on /api/v2
    split_clients "$remote_addr$request_uri" $mirror_v2_sample {
        50%     1;
        *       0;
    }
}
