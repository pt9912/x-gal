[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths =
    unit
    e2e

# Markers for test categorization
markers =
    # Test speed markers
    slow: marks tests as slow (deselect with '-m "not slow"')
    fast: marks tests as fast

    # Environment markers
    docker: marks tests that require docker
    integration: marks integration tests

    # Feature markers
    mirroring: marks tests for request mirroring feature
    routing: marks tests for advanced routing feature
    authentication: marks tests for authentication feature
    ratelimit: marks tests for rate limiting feature
    circuitbreaker: marks tests for circuit breaker feature
    cors: marks tests for CORS feature
    grpc: marks tests for gRPC functionality

    # Provider markers
    provider: marks tests for specific provider (e.g., provider(envoy))
    envoy: marks tests specific to Envoy provider
    nginx: marks tests specific to Nginx provider
    kong: marks tests specific to Kong provider
    apisix: marks tests specific to APISIX provider
    traefik: marks tests specific to Traefik provider
    haproxy: marks tests specific to HAProxy provider
    aws: marks tests specific to AWS API Gateway
    azure: marks tests specific to Azure API Management
    gcp: marks tests specific to GCP API Gateway

# Output options
addopts =
    --strict-markers
    --tb=short
    --color=yes
    -ra

# Coverage options (when running with pytest-cov)
[coverage:run]
source = gal
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

# Timeout settings (requires pytest-timeout)
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Parallel execution settings (requires pytest-xdist)
# Use with: pytest -n auto
[tool:pytest]
# Number of CPUs to use for parallel tests
# Can be overridden with -n flag
workers = auto