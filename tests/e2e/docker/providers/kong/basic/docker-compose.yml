version: '3.8'

services:
  # Backend - Stable (90% traffic)
  backend-stable:
    build:
      context: ../backends
      dockerfile: Dockerfile
    command: ["python", "-u", "/app/stable.py"]
    environment:
      - PORT=8080
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080')"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Backend - Canary (10% traffic)
  backend-canary:
    build:
      context: ../backends
      dockerfile: Dockerfile
    command: ["python", "-u", "/app/canary.py"]
    environment:
      - PORT=8080
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080')"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Kong Gateway with Traffic Splitting
  kong:
    image: kong:3.4
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yaml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
    volumes:
      - ./kong.yaml:/usr/local/kong/declarative/kong.yaml:ro
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin API
    networks:
      - test-network
    depends_on:
      backend-stable:
        condition: service_healthy
      backend-canary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  test-network:
    driver: bridge
