version: '3.8'

services:
  # Backend - Primary (production traffic)
  backend-primary:
    build:
      context: ../../../backends
      dockerfile: Dockerfile
    command: ["python", "-u", "/app/primary.py"]
    environment:
      - PORT=8080
    networks:
      - test-network-haproxy-mirroring
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080')"]
      interval: 5s
      timeout: 3s
      retries: 3

  # Backend - Shadow (mirrored traffic)
  backend-shadow:
    build:
      context: ../../../backends
      dockerfile: Dockerfile
    command: ["python", "-u", "/app/shadow.py"]
    environment:
      - PORT=8080
    networks:
      - test-network-haproxy-mirroring
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080')"]
      interval: 5s
      timeout: 3s
      retries: 3

  # HAProxy with Request Mirroring
  haproxy:
    image: haproxy:2.9-alpine
    volumes:
      - ./haproxy-mirroring.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "10004:10000"  # Proxy port (unique for HAProxy tests)
      - "9999:9999"    # Stats port
    networks:
      - test-network-haproxy-mirroring
    depends_on:
      backend-primary:
        condition: service_healthy
      backend-shadow:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:10000/health"]
      interval: 5s
      timeout: 3s
      retries: 5

networks:
  test-network-haproxy-mirroring:
    driver: bridge
