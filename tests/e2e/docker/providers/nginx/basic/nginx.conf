# Nginx Configuration Generated by GAL
# Gateway Abstraction Layer - https://github.com/pt9912/x-gal

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # DNS resolver for Docker (Docker's internal DNS)
    resolver 127.0.0.11 valid=30s;

    # Upstream blocks for backends
    upstream backend_stable {
        server backend-stable:8080;
    }

    upstream backend_canary {
        server backend-canary:8080;
    }

    # Traffic splitting configuration using split_clients
    # Uses client IP + timestamp for random distribution
    # Note: $remote_addr alone doesn't work in tests (same IP)
    # Using $msec (timestamp with milliseconds) for randomness
    split_clients "${remote_addr}${msec}" $backend_name {
        90%     backend_stable;   # 90% to stable
        *       backend_canary;   # 10% to canary (remainder)
    }

    # Server for canary_deployment_api
    server {
        listen 8080;
        server_name canary_deployment_api.local;

        # Route: /api/v1
        location /api/v1 {
            # Use backend_name directly from split_clients
            proxy_pass http://$backend_name;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

}
