# Azure API Management (APIM) Example Configuration
#
# This example demonstrates comprehensive Azure APIM features:
# - ARM Template generation
# - Policy XML (rate limiting, authentication, headers)
# - Subscription keys
# - Azure AD JWT validation
# - OpenAPI 3.0 export
# - Multiple products and APIs
#
# Usage:
#   gal generate --config azure-apim-example.yaml --provider azure_apim --output azure-apim-template.json
#
# Deployment:
#   az deployment group create \
#     --resource-group gal-resource-group \
#     --template-file azure-apim-template.json

version: "1.0"
provider: azure_apim

global:
  host: 0.0.0.0
  port: 443
  admin_port: 8080
  timeout: 30s

  # Azure APIM Global Configuration
  azure_apim:
    resource_group: gal-resource-group
    apim_service_name: gal-apim-service
    location: westeurope
    sku: Developer  # Options: Developer, Consumption, Basic, Standard, Premium

services:
  # ====================
  # 1. Public API - Minimal Configuration
  # ====================
  - name: public_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: public-backend.example.com
          port: 443
    routes:
      - path_prefix: /api/public
        methods: [GET, POST]

    # Azure APIM specific config
    azure_apim:
      product_name: PublicAPI-Product
      product_description: "Public API for unauthenticated access"
      product_published: true
      product_subscription_required: false  # No subscription keys needed
      api_revision: "1"
      api_version: "v1"
      openapi_export: true

  # ====================
  # 2. User API - Subscription Keys (API Key Auth)
  # ====================
  - name: user_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: user-backend.example.com
          port: 443
    routes:
      - path_prefix: /api/users
        methods: [GET, POST, PUT, DELETE]

        # API Key Authentication (Subscription Keys in APIM)
        authentication:
          type: api_key
          api_key:
            key_name: Ocp-Apim-Subscription-Key
            in_location: header

        # Rate limiting
        rate_limit:
          enabled: true
          requests_per_second: 100  # Converted to calls=6000, renewal-period=60

        # Header manipulation
        headers:
          request_add:
            X-Custom-Header: "from-gal"
            X-Forwarded-By: "Azure-APIM"
          response_add:
            X-Response-Time: "measured"

    azure_apim:
      product_name: UserAPI-Product
      product_description: "User Management API - Requires subscription"
      product_published: true
      product_subscription_required: true  # Subscription keys required
      api_revision: "2"
      api_version: "v2"
      openapi_export: true

  # ====================
  # 3. Admin API - Azure AD JWT Authentication
  # ====================
  - name: admin_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: admin-backend.example.com
          port: 443
    routes:
      - path_prefix: /api/admin
        methods: [GET, POST, PUT, DELETE]

        # JWT Authentication with Azure AD
        authentication:
          type: jwt
          jwt_config:
            issuer: "https://login.microsoftonline.com/{tenant-id}/v2.0"
            audience: "api://admin-api"
            required_claims:
              - name: "roles"
                value: "admin"
              - name: "scp"
                value: "user_impersonation"

        # Rate limiting for admin endpoints
        rate_limit:
          enabled: true
          requests_per_second: 50  # Lower limit for admin

    azure_apim:
      product_name: AdminAPI-Product
      product_description: "Admin API - Azure AD authentication required"
      product_published: true
      product_subscription_required: false  # JWT auth, no subscription keys
      api_revision: "1"
      api_version: "v1"
      openapi_export: true

  # ====================
  # 4. Payment API - Strict Rate Limiting
  # ====================
  - name: payment_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: payment-backend.example.com
          port: 443
    routes:
      - path_prefix: /api/payments
        methods: [POST]

        authentication:
          type: api_key
          api_key:
            key_name: Ocp-Apim-Subscription-Key
            in_location: header

        # Strict rate limiting for payment endpoints
        rate_limit:
          enabled: true
          requests_per_second: 10  # Very low limit

        headers:
          request_add:
            X-Payment-Gateway: "Azure-APIM"
            X-Security-Level: "high"

    azure_apim:
      product_name: PaymentAPI-Product
      product_description: "Payment API - Requires Premium subscription"
      product_published: true
      product_subscription_required: true
      api_revision: "1"
      api_version: "v1"
      rate_limit_calls: 600  # 10 requests/sec * 60 seconds
      rate_limit_renewal_period: 60

  # ====================
  # 5. Analytics API - Multiple Routes
  # ====================
  - name: analytics_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: analytics-backend.example.com
          port: 443
    routes:
      # Metrics endpoint - High rate limit
      - path_prefix: /api/analytics/metrics
        methods: [GET]
        rate_limit:
          enabled: true
          requests_per_second: 200

      # Reports endpoint - Lower rate limit
      - path_prefix: /api/analytics/reports
        methods: [GET, POST]
        rate_limit:
          enabled: true
          requests_per_second: 50

        authentication:
          type: api_key
          api_key:
            key_name: Ocp-Apim-Subscription-Key
            in_location: header

      # Export endpoint - Very low rate limit
      - path_prefix: /api/analytics/export
        methods: [POST]
        rate_limit:
          enabled: true
          requests_per_second: 5

        headers:
          request_add:
            X-Export-Source: "Azure-APIM"

    azure_apim:
      product_name: AnalyticsAPI-Product
      product_description: "Analytics API with tiered rate limits"
      product_published: true
      product_subscription_required: true
      api_revision: "3"
      api_version: "v3"
      openapi_export: true

  # ====================
  # 6. Webhook API - Custom Headers
  # ====================
  - name: webhook_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: webhook-backend.example.com
          port: 8080
    routes:
      - path_prefix: /webhooks
        methods: [POST]

        # Custom header manipulation
        headers:
          request_add:
            X-Webhook-Source: "Azure-APIM"
            X-Webhook-Version: "1.0"
            X-Request-ID: "generated"
          response_add:
            X-Webhook-Processed: "true"
            X-Response-Time: "measured"

    azure_apim:
      product_name: WebhookAPI-Product
      product_description: "Webhook API for external integrations"
      product_published: true
      product_subscription_required: true
      api_revision: "1"
      api_version: "v1"

  # ====================
  # 7. Premium API - All Features Combined
  # ====================
  - name: premium_api
    type: rest
    protocol: http
    upstream:
      targets:
        - host: premium-backend.example.com
          port: 443
    routes:
      - path_prefix: /api/premium
        methods: [GET, POST, PUT, DELETE, PATCH]

        # JWT Authentication
        authentication:
          type: jwt
          jwt_config:
            issuer: "https://login.microsoftonline.com/{tenant-id}/v2.0"
            audience: "api://premium-api"
            required_claims:
              - name: "roles"
                value: "premium_user"

        # Rate limiting
        rate_limit:
          enabled: true
          requests_per_second: 500

        # Header manipulation
        headers:
          request_add:
            X-Premium-Tier: "gold"
            X-API-Version: "premium-v1"
            X-Request-Source: "Azure-APIM"
          response_add:
            X-Premium-Response: "true"
            X-Cache-Status: "miss"

    azure_apim:
      product_name: PremiumAPI-Product
      product_description: "Premium API with all features enabled"
      product_published: true
      product_subscription_required: true
      api_revision: "1"
      api_version: "v1"
      openapi_export: true
      subscription_keys_required: true
      rate_limit_calls: 30000  # 500 req/sec * 60
      rate_limit_renewal_period: 60

# ====================
# Generated Files
# ====================
#
# Running this configuration will generate:
# 1. ARM Template (azure-apim-template.json) containing:
#    - APIM Service resource
#    - 7 API resources (one per service)
#    - Multiple Operation resources (one per route per HTTP method)
#    - Policy resources (with rate-limit, validate-jwt, set-header)
#    - 7 Product resources
#    - 7 Backend resources
#
# 2. OpenAPI 3.0 Spec (if using --format openapi flag):
#    - Complete OpenAPI specification
#    - Security schemes (OAuth2, API Key)
#    - All paths and operations
#
# ====================
# Deployment Commands
# ====================
#
# 1. Generate ARM Template:
#    gal generate --config azure-apim-example.yaml \
#                 --provider azure_apim \
#                 --output azure-apim-template.json
#
# 2. Create Azure Resource Group:
#    az group create --name gal-resource-group --location westeurope
#
# 3. Deploy ARM Template:
#    az deployment group create \
#      --resource-group gal-resource-group \
#      --template-file azure-apim-template.json
#
# 4. Generate OpenAPI Spec (optional):
#    gal generate --config azure-apim-example.yaml \
#                 --provider azure_apim \
#                 --format openapi \
#                 --output openapi.json
#
# 5. Import OpenAPI to existing APIM:
#    az apim api import \
#      --resource-group gal-resource-group \
#      --service-name gal-apim-service \
#      --path /api \
#      --specification-format OpenApi \
#      --specification-path openapi.json
#
# ====================
# Azure APIM Policy Examples
# ====================
#
# Generated policies will include:
#
# Rate Limiting:
#   <rate-limit calls="6000" renewal-period="60" />
#
# JWT Validation:
#   <validate-jwt header-name="Authorization">
#     <openid-config url="https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration" />
#     <audiences>
#       <audience>api://admin-api</audience>
#     </audiences>
#     <required-claims>
#       <claim name="roles" match="any">
#         <value>admin</value>
#       </claim>
#     </required-claims>
#   </validate-jwt>
#
# Subscription Key Check:
#   <check-header name="Ocp-Apim-Subscription-Key"
#                 failed-check-httpcode="401"
#                 failed-check-error-message="Missing or invalid subscription key" />
#
# Header Manipulation:
#   <set-header name="X-Custom-Header" exists-action="override">
#     <value>from-gal</value>
#   </set-header>
#
# Backend URL:
#   <set-backend-service base-url="https://backend.example.com:443" />
