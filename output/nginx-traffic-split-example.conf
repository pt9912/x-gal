# Nginx Configuration Generated by GAL
# Gateway Abstraction Layer - https://github.com/pt9912/x-gal

events {
    worker_connections 1024;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Server for canary_deployment_api
    server {
        listen 8080;
        server_name canary_deployment_api.local;

        # Route: /api/v1
        location /api/v1 {
            # Weight-based traffic splitting
            set $split_backend '';
            # stable: 90% (cumulative: 90%)
            set_random $rand_split 0 100;
            if ($rand_split < 90) {
                set $split_backend 'stable';
                proxy_pass http://api-v1-stable:8080;
            }
            if ($split_backend = '') {
                set $split_backend 'canary';
                proxy_pass http://api-v1-canary:8080;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

    # Server for ab_testing_api
    server {
        listen 8080;
        server_name ab_testing_api.local;

        # Route: /api/v2
        location /api/v2 {
            # Weight-based traffic splitting
            set $split_backend '';
            # version_a: 50% (cumulative: 50%)
            set_random $rand_split 0 100;
            if ($rand_split < 50) {
                set $split_backend 'version_a';
                proxy_pass http://api-v2-a:8080;
            }
            if ($split_backend = '') {
                set $split_backend 'version_b';
                proxy_pass http://api-v2-b:8080;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

    # Server for beta_testing_api
    server {
        listen 8080;
        server_name beta_testing_api.local;

        # Route: /api/beta
        location /api/beta {

            # Traffic splitting with header/cookie routing
            set $backend_target '';
            if ($http_x_version = 'beta') {
                set $backend_target 'beta';
            }
            if ($backend_target = '') {
                set $backend_target 'weighted';
            }
            if ($backend_target = 'production') {
                proxy_pass http://api-prod:8080;
            }
            if ($backend_target = 'beta') {
                proxy_pass http://api-beta:8080;
            }
            if ($backend_target = 'weighted') {
                # Weight-based traffic splitting
                set $split_backend '';
                # production: 100% (cumulative: 100%)
                set_random $rand_split 0 100;
                if ($rand_split < 100) {
                    set $split_backend 'production';
                    proxy_pass http://api-prod:8080;
                }
                if ($split_backend = '') {
                    set $split_backend 'beta';
                    proxy_pass http://api-beta:8080;
                }
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

    # Server for user_segment_api
    server {
        listen 8080;
        server_name user_segment_api.local;

        # Route: /api/users
        location /api/users {

            # Traffic splitting with header/cookie routing
            set $backend_target '';
            if ($cookie_canary_user = 'true') {
                set $backend_target 'canary_users';
            }
            if ($backend_target = '') {
                set $backend_target 'weighted';
            }
            if ($backend_target = 'stable') {
                proxy_pass http://api-stable:8080;
            }
            if ($backend_target = 'canary_users') {
                proxy_pass http://api-canary:8080;
            }
            if ($backend_target = 'weighted') {
                # Weight-based traffic splitting
                set $split_backend '';
                # stable: 100% (cumulative: 100%)
                set_random $rand_split 0 100;
                if ($rand_split < 100) {
                    set $split_backend 'stable';
                    proxy_pass http://api-stable:8080;
                }
                if ($split_backend = '') {
                    set $split_backend 'canary_users';
                    proxy_pass http://api-canary:8080;
                }
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

    # Server for multi_rule_api
    server {
        listen 8080;
        server_name multi_rule_api.local;

        # Route: /api/multi
        location /api/multi {

            # Traffic splitting with header/cookie routing
            set $backend_target '';
            if ($http_x_version = 'beta') {
                set $backend_target 'beta';
            }
            if ($http_x_version = 'canary') {
                set $backend_target 'canary';
            }
            if ($cookie_user_tier = 'premium') {
                set $backend_target 'beta';
            }
            if ($backend_target = '') {
                set $backend_target 'weighted';
            }
            if ($backend_target = 'stable') {
                proxy_pass http://api-stable:8080;
            }
            if ($backend_target = 'beta') {
                proxy_pass http://api-beta:8080;
            }
            if ($backend_target = 'canary') {
                proxy_pass http://api-canary:8080;
            }
            if ($backend_target = 'weighted') {
                # Weight-based traffic splitting
                set $split_backend '';
                # stable: 70% (cumulative: 70%)
                set_random $rand_split 0 100;
                if ($rand_split < 70) {
                    set $split_backend 'stable';
                    proxy_pass http://api-stable:8080;
                }
                # beta: 20% (cumulative: 90%)
                set_random $rand_split 0 100;
                if ($rand_split < 90) {
                    set $split_backend 'beta';
                    proxy_pass http://api-beta:8080;
                }
                if ($split_backend = '') {
                    set $split_backend 'canary';
                    proxy_pass http://api-canary:8080;
                }
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

    # Server for gradual_rollout_api
    server {
        listen 8080;
        server_name gradual_rollout_api.local;

        # Route: /api/rollout
        location /api/rollout {
            # Weight-based traffic splitting
            set $split_backend '';
            # current_version: 95% (cumulative: 95%)
            set_random $rand_split 0 100;
            if ($rand_split < 95) {
                set $split_backend 'current_version';
                proxy_pass http://api-v1:8080;
            }
            if ($split_backend = '') {
                set $split_backend 'new_version';
                proxy_pass http://api-v2:8080;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

    }

}
